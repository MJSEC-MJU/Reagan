# .github/workflows/docker-compose-ci.yml
name: Docker Compose CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      DB_NAME:             ${{ secrets.DB_NAME }}
      DB_USERNAME:         ${{ secrets.DB_USERNAME }}
      DB_PASSWORD:         ${{ secrets.DB_PASSWORD }}
      DB_PORT:             3306
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug workspace contents
        run: |
          echo "PWD: $PWD"
          ls -R .

      - name: Create .env file
        run: |
          cat > .env <<EOF
DB_NAME=${{ env.DB_NAME }}
DB_USERNAME=${{ env.DB_USERNAME }}
DB_PASSWORD=${{ env.DB_PASSWORD }}
DB_PORT=${{ env.DB_PORT }}
DOCKER_HUB_USERNAME=${{ env.DOCKER_HUB_USERNAME }}
EOF

      - name: Create SSL files
        run: |
          mkdir -p nginx/ssl
          echo "${{ secrets.SSL_CERT }}"    > nginx/ssl/fullchain.pem
          echo "${{ secrets.SSL_KEY  }}"    > nginx/ssl/privkey.pem
          ls -l nginx/ssl

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build & start all services
        working-directory: ${{ github.workspace }}
        run: docker-compose up --build -d

      - name: Wait for MySQL healthy
        run: |
          for i in $(seq 1 30); do
            docker-compose exec -T db mysqladmin ping -h localhost --silent && break
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Django tests
        run: docker-compose run --rm test

      - name: Collect backend logs
        if: success()
        run: docker-compose logs backend

      - name: Teardown containers
        if: always()
        run: docker-compose down

      - name: Upload test report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: BACK/reagan/build/reports/tests/test
