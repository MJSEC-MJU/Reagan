# .github/workflows/cd.yml
name: CD to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (for context/logs)
        uses: actions/checkout@v4

      - name: Deploy to Production via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host:     ${{ secrets.SERVER_HOST }}         # ex: reagan.mjsec.kr
          username: ${{ secrets.SERVER_USER }}         # ex: mjsec0710
          key:      ${{ secrets.SERVER_SSH_KEY }}      # SSH private key
          port:     ${{ secrets.SERVER_SSH_PORT }}     # 보통 22
          script: |
            # 등록된 GitHub 호스트키를 known_hosts에 추가
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            REPO_SSH="git@github.com:MJSEC-MJU/Reagan.git"
            APP_DIR="/home/${{ secrets.SERVER_USER }}/app"

            # 1) APP_DIR이 없으면 클론
            if [ ! -d "$APP_DIR" ]; then
              git clone "$REPO_SSH" "$APP_DIR"
            fi

            cd "$APP_DIR"

            # 2) 항상 최신 main으로 리셋
            git fetch --all
            git reset --hard origin/main

            # 3) Docker Hub 로그인
            echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" \
              | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            # 4) 최신 이미지 pull & 컨테이너 재기동
            docker-compose pull
            docker-compose up -d --remove-orphans
